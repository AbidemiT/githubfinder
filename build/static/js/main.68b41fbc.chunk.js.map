{"version":3,"sources":["components/layout/Navbar.js","components/pages/About.js","context/github/githubContext.js","context/alert/alertContext.js","components/user/Search.js","components/user/Useritem.js","components/layout/Spinner.js","components/user/Users.js","components/pages/Home.js","components/pages/NotFound.js","context/github/GithubState.js","components/layout/Alert.js","components/Repo/RepoItems.js","components/Repo/Repos.js","components/user/User.js","context/github/githubReducer.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["Navbar","props","className","title","to","defaultProps","About","Date","now","toLocaleString","githubContext","createContext","alertContext","SearchUser","searchUser","useContext","GithubContext","AlertContext","useState","text","setText","clearUsers","setClear","onSubmit","e","preventDefault","alertStatus","name","type","placeholder","value","onChange","target","users","length","onClick","clear","UserItem","user","avatar_url","login","html_url","src","alt","Spinner","userStyle","padding","display","gridTemplateColumns","gridGap","Users","loading","style","map","Useritem","key","id","Home","Search","githubClientId","githubClientSecret","NotFound","Alert","alert","msg","RepoItems","repo","href","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","bio","email","company","blog","followers","following","hireable","location","public_repos","role","aria-label","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","useReducer","GithubReducer","dispatch","setLoading","Provider","a","async","Axios","get","res","data","items","status","username","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","home","about","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.68b41fbc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    \r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h3>{props.title}</h3>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/about\">About</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Hello\"\r\n};\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Navbar;","import React, {Fragment} from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1>About Github Finder</h1>\r\n            <p>it all good</p>\r\n            <p><strong>Date:</strong>{Date.now().toLocaleString()}</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import {createContext} from \"react\";\r\n\r\n// Initialize githubcontext\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;","// Initialize Context\r\nimport {createContext} from \"react\";\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;","import React, {useState, useContext} from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport GithubContext from \"../../context/github/githubContext\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\n\r\nconst SearchUser = ({searchUser}) => {\r\n    const githubContext = useContext(GithubContext);\r\n    const alertContext = useContext(AlertContext);\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [clearUsers, setClear] = useState(false);\r\n\r\n   const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!text) {\r\n            alertContext.alertStatus(\"Field Can't be empty\",\"error\")\r\n        } else {\r\n            githubContext.searchUser(text);\r\n            setText(\"\")\r\n        }\r\n    }\r\n\r\n   const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const onClick = () => {\r\n        setClear(true);\r\n        githubContext.clear(clearUsers);\r\n    }\r\n\r\n        return (\r\n            <div className=\"search-container\">\r\n                <form className=\"form\" onSubmit={onSubmit}>\r\n                    <input className=\"search-input\" name=\"text\" type=\"text\" placeholder=\"Search Github User...\" value={text} onChange={onChange}/>\r\n                    <input type=\"submit\" className=\"submit\" value=\"Search\"/>\r\n                </form>\r\n                {githubContext.users.length > 0 && <button className=\"clear\" onClick={onClick}>Clear</button>}\r\n            </div>\r\n        )\r\n}\r\n\r\nSearchUser.propTypes = {\r\n    // clear: PropTypes.func.isRequired,\r\n    // alertStatus: PropTypes.func.isRequired,\r\n    // showClear: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default SearchUser;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst UserItem = (props) => {\r\n\r\n    const {avatar_url, login, html_url} = props.user;\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={avatar_url} alt=\"\" className=\"round-img\"/>\r\n            <h3>{login}</h3>\r\n            <Link to={`/user/${login}`} className=\"cta\">More</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nUserItem.propTypes = {\r\n    user : PropTypes.object.isRequired\r\n}\r\n\r\nexport default UserItem;","import React, { Fragment } from \"react\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"lds-spinner\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner;","import React, { useContext } from \"react\";\r\nimport Useritem from \"./Useritem\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport GithubContext from \"../../context/github/githubContext\";\r\n\r\nconst Users = (props) => {\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    if(githubContext.loading === \"loading\") {\r\n        return <Spinner/>\r\n    } else {\r\n        return (        \r\n            <div style={userStyle} className=\"cards-container\"> \r\n                {githubContext.users.map(user => {\r\n                return <Useritem key={user.id} user={user}/>\r\n                })}\r\n            </div> \r\n        ) \r\n    }      \r\n}\r\n\r\nconst userStyle = {\r\n    padding: '50px',\r\n    display: \"grid\",\r\n    gridTemplateColumns: 'repeat(auto-fit,minmax(200px, 1fr))',\r\n    gridGap: '10px'\r\n}\r\n\r\nUsers.propTypes = {\r\n    // users: PropTypes.array.isRequired,\r\n    // loading: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Users;","import React, {Fragment} from 'react';\r\nimport Search from \"../user/Search\";\r\nimport Users from \"../user/Users\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Fragment>\r\n            <Search />\r\n            <Users/>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found</h1>\r\n            <p>The page you are looking for doesn't exist...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound;","import React, {useReducer} from \"react\";\r\nimport Axios from \"axios\";\r\nimport GithubContext from \"./githubContext\";\r\nimport GithubReducer from \"./githubReducer\";\r\nimport {\r\n    SEARCH_USERS,\r\n    GET_REPOS,\r\n    GET_USER,\r\n    SET_LOADING,\r\n    CLEAR_USERS\r\n} from \"../types\";\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n    githubClientId = process.env.GITHUB_CLIENT_ID;\r\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\n\r\n\r\nconst GithubState = props => {\r\n    const initialState = {\r\n        users: [],\r\n        user: {},\r\n        repos: [],\r\n        loading: \"!loading\"\r\n    }\r\n\r\n    //Dispatching to reducer\r\n    const [state, dispatch] = useReducer(GithubReducer,initialState);\r\n\r\n    // Search users\r\n    const searchUser = async(text) => {\r\n        setLoading();\r\n        let url = \"https://api.github.com/search/users?q=\";\r\n        let res = await Axios.get(`${url}${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n        // setUsers(res.data.items);\r\n        dispatch({type: SEARCH_USERS,\r\n        payload: res.data.items})\r\n      }\r\n\r\n    // get repos\r\n    const getUserRepos = async(username) => {\r\n        setLoading(\"loading\");\r\n        let url = \"https://api.github.com/users/\";\r\n        let res = await Axios.get(`${url}${username}/repos?per_page=5&sort=asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n        dispatch({type: GET_REPOS,\r\n        payload: res.data})\r\n\r\n      }\r\n      // Repos endpoint\r\n      // https://api.github.com/users/username/repos\r\n      // per_page=5\r\n      // sort=asc\r\n\r\n    // get users\r\n    const getUser = async(username) => {\r\n        setLoading(\"loading\");\r\n        let url = \"https://api.github.com/users/\";\r\n        let res = await Axios.get(`${url}${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`);\r\n        dispatch({type: GET_USER,\r\n        payload: res.data})\r\n      }\r\n\r\n    // clear users\r\n    const clear = (status) => dispatch({type: CLEAR_USERS});\r\n\r\n    // set loading\r\n    const setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n    return <GithubContext.Provider \r\n    value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUser,\r\n        clear,\r\n        getUser,\r\n        getUserRepos\r\n    }}\r\n    >\r\n        {props.children}\r\n    </GithubContext.Provider>\r\n\r\n}\r\nexport default GithubState;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\n\r\nconst Alert = () => {\r\n    const alertContext = useContext(AlertContext);\r\n    const {alert} = alertContext; \r\n\r\n        return (\r\n            alert !== null && (<div>\r\n                <p>{alert.msg}</p> \r\n            </div>)\r\n        )\r\n}\r\n\r\nAlert.propTypes = {\r\n    // alertStatus: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\n\r\nconst RepoItems = ({repo}) => {\r\n    return (\r\n        <div>\r\n            <a href={repo.html_url}>{repo.name}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RepoItems;","import React from 'react';\r\nimport ReposItem from './RepoItems';\r\n\r\n\r\nconst Repos = ({repos}) => {\r\n    return (\r\n        <div>\r\n            <h4>Repos</h4>\r\n            {repos.map(repo => (\r\n                <ReposItem repo={repo} key={repo.id}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Repos;\r\n","import React, {Fragment, useEffect, useContext} from 'react';\r\nimport Repos from \"../../components/Repo/Repos\";\r\nimport {Link} from \"react-router-dom\";\r\nimport GithubContext from \"../../context/github/githubContext\";\r\n\r\nconst User = ({match}) =>  {\r\n    const githubContext = useContext(GithubContext);\r\n    const {user, getUser,getUserRepos,repos,} = githubContext;\r\n    useEffect(() => {\r\n        getUser(match.params.login);\r\n        getUserRepos(match.params.login);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n        const {avatar_url,bio,company,blog,email,followers,following,hireable,html_url,location,login,name,public_repos} = user;\r\n        return (\r\n            <Fragment>\r\n                <Link to=\"/\"> Back to Search</Link>\r\n                <div className=\"user-container\">\r\n                    <img src={avatar_url} alt={`${name} github avatar`}/>\r\n                    <div className=\"user-content\">\r\n                        <h1>{name}</h1>\r\n                        {email && <p><strong>Email:</strong> {email}</p>}\r\n                        <p><strong>Bio:</strong> <br/> {bio}</p>\r\n                        <p><strong>Hireable:</strong>{\" \"}{hireable? \"Yes ✔\" : \" No ❌\"}</p>\r\n                        <p>Location: {location}</p>\r\n                        <span> Followers <span role=\"img\" aria-label=\"gender-emoji\">👬</span>: {followers}</span>\r\n                        <span> Following <span role=\"img\" aria-label=\"gender-emoji\">👬</span>: {following}</span>\r\n                        <Repos repos={repos}/>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n\r\n}\r\n\r\nexport default User;\r\n","import {\r\n    SEARCH_USERS,\r\n    GET_REPOS,\r\n    GET_USER,\r\n    SET_LOADING,\r\n    CLEAR_USERS\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case SEARCH_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                loading: \"!loading\"\r\n            }\r\n        case GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                loading: \"!loading\"\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: action.payload,\r\n            }\r\n        case CLEAR_USERS:\r\n            return {\r\n                ...state,\r\n                users: [],\r\n                loading: \"!loading\"\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: \"loading\"\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const CLEAR_USERS = \"CLEAR_USERS\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";","import {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from \"../types\";\r\n\r\nexport default(state, action) => {\r\n    switch (action.type) {\r\n        case SET_ALERT:\r\n            return action.payload;\r\n        case REMOVE_ALERT:\r\n            return null; \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useReducer, useContext} from \"react\";\r\nimport AlertContext from \"./alertContext\";\r\nimport AlertReducer from \"./alertReducer\";\r\nimport {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from \"../types\";\r\n\r\nconst AlertState = props => {\r\n    const initialState = null;\r\n\r\n    // Dispatching to reducer\r\n    const [state, dispatch] = useReducer(AlertReducer,initialState);\r\n\r\n    // set alert\r\n    // const [alert, setAlert] = useState(null);\r\n\r\n    const alertStatus = (msg, status) => {\r\n      dispatch({type: SET_ALERT,\r\n        payload: {msg, status}})\r\n      \r\n      \r\n      setTimeout(() => {\r\n        dispatch({type: REMOVE_ALERT})\r\n      }, 5000);\r\n    }\r\n\r\n    return <AlertContext.Provider \r\n    value={{\r\n        alertStatus,\r\n        alert: state\r\n    }}\r\n    >\r\n        {props.children}\r\n    </AlertContext.Provider>\r\n\r\n}\r\nexport default AlertState;","import React, {Fragment} from 'react';\nimport Navbar from \"./components/layout/Navbar\";\nimport about from \"./components/pages/About\";\nimport home from \"./components/pages/Home\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Alert from \"./components/layout/Alert\";\nimport User from \"./components/user/User\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport GithubState from \"./context/github/GithubState\";\nimport AlertState from \"./context/alert/AlertState\";\nimport './App.css';\n\nconst App = () => {\n\n    // const {users,user,loading,alert,repos} = this.state;\n    let title = \"GitHub Finder\";\n\n    return (\n      <GithubState>\n        <AlertState>\n        <Router>\n          <Fragment>\n            <Navbar title={title}/>\n            <Alert/>\n            <Switch>\n              <Route exact path=\"/\" component={home}/>\n              <Route exact path=\"/about\" component={about}/>\n              <Route exact path=\"/user/:login\" render={props => (\n                <Fragment>\n                  <User {...props}/>\n                </Fragment>\n              )}/>\n              <Route exact component={NotFound}/>\n            </Switch>\n          </Fragment>\n        </Router>\n        </AlertState>\n      </GithubState>\n        );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}